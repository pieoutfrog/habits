version: '3'

services:
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5


  app:
    build: .
    tty: true
    command: python manage.py migrate && python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - '8001:8000'
    depends_on:
      db:
        condition: service_healthy



  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    restart: always
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data/
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 3

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - app
    healthcheck:
      test: ['CMD', 'celery', 'inspect', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

  celery_beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - db
      - app
      - celery


volumes:
  pgdata:
  pg_data:
